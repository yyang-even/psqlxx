#include <psqlxx/test_utils.hpp>

#include <psqlxx/db.hpp>


using namespace psqlxx;


namespace {

[[nodiscard]]
const auto buildConnectionStringFor(const std::string &user) {
    return test::GetDbHostParameter() + " " +
           test::GetSharedDbNameParameter() + " " +
           ComposeDbParameter(DbParameterKey::user, user);
}

}


namespace psqlxx {

namespace test {

const std::string GetDbHostParameter() {
    return ComposeDbParameter(DbParameterKey::host, "@psqlxx_TEST_DB_HOST@");
}

const std::string GetSharedDbNameParameter() {
    return ComposeDbParameter(DbParameterKey::dbname, "@psqlxx_SHARED_TEST_DB_NAME@");
}

const std::string GetViewerConnectionString(const bool with_password) {
    const auto connection_str_without_password =
        buildConnectionStringFor("@psqlxx_TEST_DB_READ_USER_NAME@");

    if (with_password)
        return connection_str_without_password + " " +
               ComposeDbParameter(DbParameterKey::password, "@psqlxx_TEST_DB_READ_USER_PASSWORD@");
    else {
        return connection_str_without_password;
    }
}

const std::string GetAdminConnectionString() {
    return buildConnectionStringFor("@psqlxx_TEST_DB_ADMIN_USER_NAME@") + " " +
           ComposeDbParameter(DbParameterKey::password, "@psqlxx_TEST_DB_ADMIN_USER_PASSWORD@");
}

}//namespace test

}//namespace psqlxx
